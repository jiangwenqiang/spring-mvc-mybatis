<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    	http://www.springframework.org/schema/aop
    	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- 关系数据库连接池 -->
	<bean id="sqlDS" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://192.168.0.105:3306/oppwork?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull" />
		<property name="username" value="root" />
		<property name="password" value="jiangwq" />
		<property name="maxActive" value="1000" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="600000" />
		<property name="maxIdle" value="500" />
		<property name="minIdle" value="3" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="testOnBorrow" value="true" />
		<property name="validationQuery" value="select 1" />
		<property name="filters" value="mergeStat" />
		<property name="connectionProperties" value="druid.stat.slowSqlMillis=3000" />
	</bean>
	<!-- 事务管理器配置 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="sqlDS" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- 关系数据库对应的SessionFactory,被MyBatis创建用于执行SQL -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource">
			<ref local="sqlDS" />
		</property>
	</bean>
	<bean id="StorageOperation" class="org.elnino.demo.dao.FMybatisTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
		<constructor-arg name="executorType" value="BATCH" />
	</bean>
</beans>